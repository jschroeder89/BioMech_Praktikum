ARM GAS  /tmp/ccEcfvxM.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 2
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"memstreams.c"
  17              		.section	.text.put,"ax",%progbits
  18              		.align	2
  19              		.p2align 4,,15
  20              		.thumb
  21              		.thumb_func
  22              		.type	put, %function
  23              	put:
  24              		@ args = 0, pretend = 0, frame = 0
  25              		@ frame_needed = 0, uses_anonymous_args = 0
  26              		@ link register save eliminated.
  27 0000 C368     		ldr	r3, [r0, #12]
  28 0002 8268     		ldr	r2, [r0, #8]
  29 0004 9A42     		cmp	r2, r3
  30 0006 06D0     		beq	.L3
  31 0008 4268     		ldr	r2, [r0, #4]
  32 000a D154     		strb	r1, [r2, r3]
  33 000c C368     		ldr	r3, [r0, #12]
  34 000e 0133     		adds	r3, r3, #1
  35 0010 C360     		str	r3, [r0, #12]
  36 0012 0020     		movs	r0, #0
  37 0014 7047     		bx	lr
  38              	.L3:
  39 0016 6FF00100 		mvn	r0, #1
  40 001a 7047     		bx	lr
  41              		.size	put, .-put
  42 001c AFF30080 		.section	.text.get,"ax",%progbits
  43              		.align	2
  44              		.p2align 4,,15
  45              		.thumb
  46              		.thumb_func
  47              		.type	get, %function
  48              	get:
  49              		@ args = 0, pretend = 0, frame = 0
  50              		@ frame_needed = 0, uses_anonymous_args = 0
  51              		@ link register save eliminated.
  52 0000 0269     		ldr	r2, [r0, #16]
  53 0002 C168     		ldr	r1, [r0, #12]
  54 0004 9142     		cmp	r1, r2
  55 0006 0346     		mov	r3, r0
  56 0008 04D0     		beq	.L7
  57 000a 4168     		ldr	r1, [r0, #4]
ARM GAS  /tmp/ccEcfvxM.s 			page 2


  58 000c 885C     		ldrb	r0, [r1, r2]	@ zero_extendqisi2
  59 000e 0132     		adds	r2, r2, #1
  60 0010 1A61     		str	r2, [r3, #16]
  61 0012 7047     		bx	lr
  62              	.L7:
  63 0014 6FF00100 		mvn	r0, #1
  64 0018 7047     		bx	lr
  65              		.size	get, .-get
  66              		.section	.text.reads,"ax",%progbits
  67              		.align	2
  68              		.p2align 4,,15
  69              		.thumb
  70              		.thumb_func
  71              		.type	reads, %function
  72              	reads:
  73              		@ args = 0, pretend = 0, frame = 0
  74              		@ frame_needed = 0, uses_anonymous_args = 0
  75 0000 38B5     		push	{r3, r4, r5, lr}
  76 0002 0446     		mov	r4, r0
  77 0004 0846     		mov	r0, r1
  78 0006 2369     		ldr	r3, [r4, #16]
  79 0008 E568     		ldr	r5, [r4, #12]
  80 000a 6168     		ldr	r1, [r4, #4]
  81 000c ED1A     		subs	r5, r5, r3
  82 000e AA42     		cmp	r2, r5
  83 0010 38BF     		it	cc
  84 0012 1546     		movcc	r5, r2
  85 0014 1944     		add	r1, r1, r3
  86 0016 2A46     		mov	r2, r5
  87 0018 FFF7FEFF 		bl	memcpy
  88 001c 2369     		ldr	r3, [r4, #16]
  89 001e 2B44     		add	r3, r3, r5
  90 0020 2361     		str	r3, [r4, #16]
  91 0022 2846     		mov	r0, r5
  92 0024 38BD     		pop	{r3, r4, r5, pc}
  93              		.size	reads, .-reads
  94 0026 00BFAFF3 		.section	.text.writes,"ax",%progbits
  94      0080AFF3 
  94      0080
  95              		.align	2
  96              		.p2align 4,,15
  97              		.thumb
  98              		.thumb_func
  99              		.type	writes, %function
 100              	writes:
 101              		@ args = 0, pretend = 0, frame = 0
 102              		@ frame_needed = 0, uses_anonymous_args = 0
 103 0000 38B5     		push	{r3, r4, r5, lr}
 104 0002 C368     		ldr	r3, [r0, #12]
 105 0004 8568     		ldr	r5, [r0, #8]
 106 0006 0446     		mov	r4, r0
 107 0008 ED1A     		subs	r5, r5, r3
 108 000a 4068     		ldr	r0, [r0, #4]
 109 000c AA42     		cmp	r2, r5
 110 000e 38BF     		it	cc
 111 0010 1546     		movcc	r5, r2
 112 0012 1844     		add	r0, r0, r3
ARM GAS  /tmp/ccEcfvxM.s 			page 3


 113 0014 2A46     		mov	r2, r5
 114 0016 FFF7FEFF 		bl	memcpy
 115 001a E368     		ldr	r3, [r4, #12]
 116 001c 2B44     		add	r3, r3, r5
 117 001e E360     		str	r3, [r4, #12]
 118 0020 2846     		mov	r0, r5
 119 0022 38BD     		pop	{r3, r4, r5, pc}
 120              		.size	writes, .-writes
 121 0024 AFF30080 		.section	.text.msObjectInit,"ax",%progbits
 121      AFF30080 
 121      AFF30080 
 122              		.align	2
 123              		.p2align 4,,15
 124              		.global	msObjectInit
 125              		.thumb
 126              		.thumb_func
 127              		.type	msObjectInit, %function
 128              	msObjectInit:
 129              		@ args = 0, pretend = 0, frame = 0
 130              		@ frame_needed = 0, uses_anonymous_args = 0
 131              		@ link register save eliminated.
 132 0000 10B4     		push	{r4}
 133 0002 4160     		str	r1, [r0, #4]
 134 0004 044C     		ldr	r4, .L11
 135 0006 0460     		str	r4, [r0]
 136 0008 0021     		movs	r1, #0
 137 000a 8260     		str	r2, [r0, #8]
 138 000c C360     		str	r3, [r0, #12]
 139 000e 0161     		str	r1, [r0, #16]
 140 0010 5DF8044B 		ldr	r4, [sp], #4
 141 0014 7047     		bx	lr
 142              	.L12:
 143 0016 00BF     		.align	2
 144              	.L11:
 145 0018 00000000 		.word	.LANCHOR0
 146              		.size	msObjectInit, .-msObjectInit
 147 001c AFF30080 		.section	.rodata.vmt,"a",%progbits
 148              		.align	2
 149              		.set	.LANCHOR0,. + 0
 150              		.type	vmt, %object
 151              		.size	vmt, 16
 152              	vmt:
 153 0000 00000000 		.word	writes
 154 0004 00000000 		.word	reads
 155 0008 00000000 		.word	put
 156 000c 00000000 		.word	get
 157              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.3 20140228 (release) [ARM/embedded-4_8-br
ARM GAS  /tmp/ccEcfvxM.s 			page 4


DEFINED SYMBOLS
                            *ABS*:00000000 memstreams.c
     /tmp/ccEcfvxM.s:18     .text.put:00000000 $t
     /tmp/ccEcfvxM.s:23     .text.put:00000000 put
     /tmp/ccEcfvxM.s:43     .text.get:00000000 $t
     /tmp/ccEcfvxM.s:48     .text.get:00000000 get
     /tmp/ccEcfvxM.s:67     .text.reads:00000000 $t
     /tmp/ccEcfvxM.s:72     .text.reads:00000000 reads
     /tmp/ccEcfvxM.s:95     .text.writes:00000000 $t
     /tmp/ccEcfvxM.s:100    .text.writes:00000000 writes
     /tmp/ccEcfvxM.s:122    .text.msObjectInit:00000000 $t
     /tmp/ccEcfvxM.s:128    .text.msObjectInit:00000000 msObjectInit
     /tmp/ccEcfvxM.s:145    .text.msObjectInit:00000018 $d
     /tmp/ccEcfvxM.s:148    .rodata.vmt:00000000 $d
     /tmp/ccEcfvxM.s:152    .rodata.vmt:00000000 vmt
     /tmp/ccEcfvxM.s:147    .text.msObjectInit:0000001c $t

UNDEFINED SYMBOLS
memcpy
