ARM GAS  /tmp/cc8FkpAd.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 2
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"chmboxes.c"
  17              		.section	.text.chMBInit,"ax",%progbits
  18              		.align	2
  19              		.p2align 4,,15
  20              		.global	chMBInit
  21              		.thumb
  22              		.thumb_func
  23              		.type	chMBInit, %function
  24              	chMBInit:
  25              		@ args = 0, pretend = 0, frame = 0
  26              		@ frame_needed = 0, uses_anonymous_args = 0
  27 0000 70B5     		push	{r4, r5, r6, lr}
  28 0002 0446     		mov	r4, r0
  29 0004 0D46     		mov	r5, r1
  30 0006 1646     		mov	r6, r2
  31 0008 A0B1     		cbz	r0, .L2
  32 000a 99B1     		cbz	r1, .L2
  33 000c 002A     		cmp	r2, #0
  34 000e 11DD     		ble	.L2
  35              	.L3:
  36 0010 05EB8603 		add	r3, r5, r6, lsl #2
  37 0014 3146     		mov	r1, r6
  38 0016 04F11C00 		add	r0, r4, #28
  39 001a E560     		str	r5, [r4, #12]
  40 001c A560     		str	r5, [r4, #8]
  41 001e 2560     		str	r5, [r4]
  42 0020 6360     		str	r3, [r4, #4]
  43 0022 FFF7FEFF 		bl	chSemInit
  44 0026 04F11000 		add	r0, r4, #16
  45 002a 0021     		movs	r1, #0
  46 002c BDE87040 		pop	{r4, r5, r6, lr}
  47 0030 FFF7FEBF 		b	chSemInit
  48              	.L2:
  49 0034 0148     		ldr	r0, .L11
  50 0036 FFF7FEFF 		bl	chDbgPanic
  51 003a E9E7     		b	.L3
  52              	.L12:
  53              		.align	2
  54              	.L11:
  55 003c 00000000 		.word	.LC0
  56              		.size	chMBInit, .-chMBInit
  57              		.section	.text.chMBReset,"ax",%progbits
ARM GAS  /tmp/cc8FkpAd.s 			page 2


  58              		.align	2
  59              		.p2align 4,,15
  60              		.global	chMBReset
  61              		.thumb
  62              		.thumb_func
  63              		.type	chMBReset, %function
  64              	chMBReset:
  65              		@ args = 0, pretend = 0, frame = 0
  66              		@ frame_needed = 0, uses_anonymous_args = 0
  67 0000 10B5     		push	{r4, lr}
  68 0002 0446     		mov	r4, r0
  69 0004 D8B1     		cbz	r0, .L15
  70              	.L14:
  71 0006 2023     		movs	r3, #32
  72              	@ 95 "../../../ChibiOS/os/kernel/src/chmboxes.c" 1
  73 0008 83F31188 		msr     BASEPRI, r3
  74              	@ 0 "" 2
  75              		.thumb
  76 000c FFF7FEFF 		bl	dbg_check_lock
  77 0010 2368     		ldr	r3, [r4]
  78 0012 6168     		ldr	r1, [r4, #4]
  79 0014 E360     		str	r3, [r4, #12]
  80 0016 C91A     		subs	r1, r1, r3
  81 0018 A360     		str	r3, [r4, #8]
  82 001a 04F11C00 		add	r0, r4, #28
  83 001e 8910     		asrs	r1, r1, #2
  84 0020 FFF7FEFF 		bl	chSemResetI
  85 0024 04F11000 		add	r0, r4, #16
  86 0028 0021     		movs	r1, #0
  87 002a FFF7FEFF 		bl	chSemResetI
  88 002e FFF7FEFF 		bl	chSchRescheduleS
  89 0032 FFF7FEFF 		bl	dbg_check_unlock
  90 0036 0023     		movs	r3, #0
  91              	@ 100 "../../../ChibiOS/os/kernel/src/chmboxes.c" 1
  92 0038 83F31188 		msr     BASEPRI, r3
  93              	@ 0 "" 2
  94              		.thumb
  95 003c 10BD     		pop	{r4, pc}
  96              	.L15:
  97 003e 0248     		ldr	r0, .L16
  98 0040 FFF7FEFF 		bl	chDbgPanic
  99 0044 DFE7     		b	.L14
 100              	.L17:
 101 0046 00BF     		.align	2
 102              	.L16:
 103 0048 10000000 		.word	.LC1
 104              		.size	chMBReset, .-chMBReset
 105 004c AFF30080 		.section	.text.chMBPostS,"ax",%progbits
 106              		.align	2
 107              		.p2align 4,,15
 108              		.global	chMBPostS
 109              		.thumb
 110              		.thumb_func
 111              		.type	chMBPostS, %function
 112              	chMBPostS:
 113              		@ args = 0, pretend = 0, frame = 0
 114              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cc8FkpAd.s 			page 3


 115 0000 70B5     		push	{r4, r5, r6, lr}
 116 0002 0446     		mov	r4, r0
 117 0004 0E46     		mov	r6, r1
 118 0006 1546     		mov	r5, r2
 119 0008 FFF7FEFF 		bl	chDbgCheckClassS
 120 000c C4B1     		cbz	r4, .L22
 121              	.L19:
 122 000e 2946     		mov	r1, r5
 123 0010 04F11C00 		add	r0, r4, #28
 124 0014 FFF7FEFF 		bl	chSemWaitTimeoutS
 125 0018 0546     		mov	r5, r0
 126 001a 78B9     		cbnz	r0, .L20
 127 001c A268     		ldr	r2, [r4, #8]
 128 001e 6168     		ldr	r1, [r4, #4]
 129 0020 131D     		adds	r3, r2, #4
 130 0022 8B42     		cmp	r3, r1
 131 0024 A360     		str	r3, [r4, #8]
 132 0026 28BF     		it	cs
 133 0028 2368     		ldrcs	r3, [r4]
 134 002a 1660     		str	r6, [r2]
 135 002c 04F11000 		add	r0, r4, #16
 136 0030 28BF     		it	cs
 137 0032 A360     		strcs	r3, [r4, #8]
 138 0034 FFF7FEFF 		bl	chSemSignalI
 139 0038 FFF7FEFF 		bl	chSchRescheduleS
 140              	.L20:
 141 003c 2846     		mov	r0, r5
 142 003e 70BD     		pop	{r4, r5, r6, pc}
 143              	.L22:
 144 0040 0148     		ldr	r0, .L23
 145 0042 FFF7FEFF 		bl	chDbgPanic
 146 0046 E2E7     		b	.L19
 147              	.L24:
 148              		.align	2
 149              	.L23:
 150 0048 20000000 		.word	.LC2
 151              		.size	chMBPostS, .-chMBPostS
 152 004c AFF30080 		.section	.text.chMBPost,"ax",%progbits
 153              		.align	2
 154              		.p2align 4,,15
 155              		.global	chMBPost
 156              		.thumb
 157              		.thumb_func
 158              		.type	chMBPost, %function
 159              	chMBPost:
 160              		@ args = 0, pretend = 0, frame = 0
 161              		@ frame_needed = 0, uses_anonymous_args = 0
 162 0000 70B5     		push	{r4, r5, r6, lr}
 163 0002 2023     		movs	r3, #32
 164 0004 0646     		mov	r6, r0
 165 0006 0D46     		mov	r5, r1
 166 0008 1446     		mov	r4, r2
 167              	@ 125 "../../../ChibiOS/os/kernel/src/chmboxes.c" 1
 168 000a 83F31188 		msr     BASEPRI, r3
 169              	@ 0 "" 2
 170              		.thumb
 171 000e FFF7FEFF 		bl	dbg_check_lock
ARM GAS  /tmp/cc8FkpAd.s 			page 4


 172 0012 2246     		mov	r2, r4
 173 0014 2946     		mov	r1, r5
 174 0016 3046     		mov	r0, r6
 175 0018 FFF7FEFF 		bl	chMBPostS
 176 001c 0446     		mov	r4, r0
 177 001e FFF7FEFF 		bl	dbg_check_unlock
 178 0022 0023     		movs	r3, #0
 179              	@ 127 "../../../ChibiOS/os/kernel/src/chmboxes.c" 1
 180 0024 83F31188 		msr     BASEPRI, r3
 181              	@ 0 "" 2
 182              		.thumb
 183 0028 2046     		mov	r0, r4
 184 002a 70BD     		pop	{r4, r5, r6, pc}
 185              		.size	chMBPost, .-chMBPost
 186 002c AFF30080 		.section	.text.chMBPostI,"ax",%progbits
 187              		.align	2
 188              		.p2align 4,,15
 189              		.global	chMBPostI
 190              		.thumb
 191              		.thumb_func
 192              		.type	chMBPostI, %function
 193              	chMBPostI:
 194              		@ args = 0, pretend = 0, frame = 0
 195              		@ frame_needed = 0, uses_anonymous_args = 0
 196 0000 38B5     		push	{r3, r4, r5, lr}
 197 0002 0446     		mov	r4, r0
 198 0004 0D46     		mov	r5, r1
 199 0006 FFF7FEFF 		bl	chDbgCheckClassI
 200 000a A4B1     		cbz	r4, .L31
 201              	.L27:
 202 000c 636A     		ldr	r3, [r4, #36]
 203 000e 002B     		cmp	r3, #0
 204 0010 15DD     		ble	.L30
 205 0012 A068     		ldr	r0, [r4, #8]
 206 0014 6168     		ldr	r1, [r4, #4]
 207 0016 021D     		adds	r2, r0, #4
 208 0018 013B     		subs	r3, r3, #1
 209 001a 8A42     		cmp	r2, r1
 210 001c 6362     		str	r3, [r4, #36]
 211 001e 28BF     		it	cs
 212 0020 2368     		ldrcs	r3, [r4]
 213 0022 A260     		str	r2, [r4, #8]
 214 0024 0560     		str	r5, [r0]
 215 0026 04F11000 		add	r0, r4, #16
 216 002a 28BF     		it	cs
 217 002c A360     		strcs	r3, [r4, #8]
 218 002e FFF7FEFF 		bl	chSemSignalI
 219 0032 0020     		movs	r0, #0
 220 0034 38BD     		pop	{r3, r4, r5, pc}
 221              	.L31:
 222 0036 0348     		ldr	r0, .L32
 223 0038 FFF7FEFF 		bl	chDbgPanic
 224 003c E6E7     		b	.L27
 225              	.L30:
 226 003e 4FF0FF30 		mov	r0, #-1
 227 0042 38BD     		pop	{r3, r4, r5, pc}
 228              	.L33:
ARM GAS  /tmp/cc8FkpAd.s 			page 5


 229              		.align	2
 230              	.L32:
 231 0044 30000000 		.word	.LC3
 232              		.size	chMBPostI, .-chMBPostI
 233 0048 AFF30080 		.section	.text.chMBPostAheadS,"ax",%progbits
 233      AFF30080 
 234              		.align	2
 235              		.p2align 4,,15
 236              		.global	chMBPostAheadS
 237              		.thumb
 238              		.thumb_func
 239              		.type	chMBPostAheadS, %function
 240              	chMBPostAheadS:
 241              		@ args = 0, pretend = 0, frame = 0
 242              		@ frame_needed = 0, uses_anonymous_args = 0
 243 0000 70B5     		push	{r4, r5, r6, lr}
 244 0002 0446     		mov	r4, r0
 245 0004 0E46     		mov	r6, r1
 246 0006 1546     		mov	r5, r2
 247 0008 FFF7FEFF 		bl	chDbgCheckClassS
 248 000c CCB1     		cbz	r4, .L38
 249              	.L35:
 250 000e 2946     		mov	r1, r5
 251 0010 04F11C00 		add	r0, r4, #28
 252 0014 FFF7FEFF 		bl	chSemWaitTimeoutS
 253 0018 0546     		mov	r5, r0
 254 001a 60B9     		cbnz	r0, .L36
 255 001c E368     		ldr	r3, [r4, #12]
 256 001e 2268     		ldr	r2, [r4]
 257 0020 043B     		subs	r3, r3, #4
 258 0022 9342     		cmp	r3, r2
 259 0024 E360     		str	r3, [r4, #12]
 260 0026 08D3     		bcc	.L39
 261              	.L37:
 262 0028 1E60     		str	r6, [r3]
 263 002a 04F11000 		add	r0, r4, #16
 264 002e FFF7FEFF 		bl	chSemSignalI
 265 0032 FFF7FEFF 		bl	chSchRescheduleS
 266              	.L36:
 267 0036 2846     		mov	r0, r5
 268 0038 70BD     		pop	{r4, r5, r6, pc}
 269              	.L39:
 270 003a 6368     		ldr	r3, [r4, #4]
 271 003c 043B     		subs	r3, r3, #4
 272 003e E360     		str	r3, [r4, #12]
 273 0040 F2E7     		b	.L37
 274              	.L38:
 275 0042 0248     		ldr	r0, .L40
 276 0044 FFF7FEFF 		bl	chDbgPanic
 277 0048 E1E7     		b	.L35
 278              	.L41:
 279 004a 00BF     		.align	2
 280              	.L40:
 281 004c 40000000 		.word	.LC4
 282              		.size	chMBPostAheadS, .-chMBPostAheadS
 283              		.section	.text.chMBPostAhead,"ax",%progbits
 284              		.align	2
ARM GAS  /tmp/cc8FkpAd.s 			page 6


 285              		.p2align 4,,15
 286              		.global	chMBPostAhead
 287              		.thumb
 288              		.thumb_func
 289              		.type	chMBPostAhead, %function
 290              	chMBPostAhead:
 291              		@ args = 0, pretend = 0, frame = 0
 292              		@ frame_needed = 0, uses_anonymous_args = 0
 293 0000 70B5     		push	{r4, r5, r6, lr}
 294 0002 2023     		movs	r3, #32
 295 0004 0646     		mov	r6, r0
 296 0006 0D46     		mov	r5, r1
 297 0008 1446     		mov	r4, r2
 298              	@ 218 "../../../ChibiOS/os/kernel/src/chmboxes.c" 1
 299 000a 83F31188 		msr     BASEPRI, r3
 300              	@ 0 "" 2
 301              		.thumb
 302 000e FFF7FEFF 		bl	dbg_check_lock
 303 0012 2246     		mov	r2, r4
 304 0014 2946     		mov	r1, r5
 305 0016 3046     		mov	r0, r6
 306 0018 FFF7FEFF 		bl	chMBPostAheadS
 307 001c 0446     		mov	r4, r0
 308 001e FFF7FEFF 		bl	dbg_check_unlock
 309 0022 0023     		movs	r3, #0
 310              	@ 220 "../../../ChibiOS/os/kernel/src/chmboxes.c" 1
 311 0024 83F31188 		msr     BASEPRI, r3
 312              	@ 0 "" 2
 313              		.thumb
 314 0028 2046     		mov	r0, r4
 315 002a 70BD     		pop	{r4, r5, r6, pc}
 316              		.size	chMBPostAhead, .-chMBPostAhead
 317 002c AFF30080 		.section	.text.chMBPostAheadI,"ax",%progbits
 318              		.align	2
 319              		.p2align 4,,15
 320              		.global	chMBPostAheadI
 321              		.thumb
 322              		.thumb_func
 323              		.type	chMBPostAheadI, %function
 324              	chMBPostAheadI:
 325              		@ args = 0, pretend = 0, frame = 0
 326              		@ frame_needed = 0, uses_anonymous_args = 0
 327 0000 38B5     		push	{r3, r4, r5, lr}
 328 0002 0446     		mov	r4, r0
 329 0004 0D46     		mov	r5, r1
 330 0006 FFF7FEFF 		bl	chDbgCheckClassI
 331 000a A4B1     		cbz	r4, .L48
 332              	.L44:
 333 000c 626A     		ldr	r2, [r4, #36]
 334 000e 002A     		cmp	r2, #0
 335 0010 15DD     		ble	.L47
 336 0012 E368     		ldr	r3, [r4, #12]
 337 0014 2168     		ldr	r1, [r4]
 338 0016 043B     		subs	r3, r3, #4
 339 0018 013A     		subs	r2, r2, #1
 340 001a 8B42     		cmp	r3, r1
 341 001c 6262     		str	r2, [r4, #36]
ARM GAS  /tmp/cc8FkpAd.s 			page 7


 342 001e E360     		str	r3, [r4, #12]
 343 0020 02D2     		bcs	.L46
 344 0022 6368     		ldr	r3, [r4, #4]
 345 0024 043B     		subs	r3, r3, #4
 346 0026 E360     		str	r3, [r4, #12]
 347              	.L46:
 348 0028 04F11000 		add	r0, r4, #16
 349 002c 1D60     		str	r5, [r3]
 350 002e FFF7FEFF 		bl	chSemSignalI
 351 0032 0020     		movs	r0, #0
 352 0034 38BD     		pop	{r3, r4, r5, pc}
 353              	.L48:
 354 0036 0348     		ldr	r0, .L49
 355 0038 FFF7FEFF 		bl	chDbgPanic
 356 003c E6E7     		b	.L44
 357              	.L47:
 358 003e 4FF0FF30 		mov	r0, #-1
 359 0042 38BD     		pop	{r3, r4, r5, pc}
 360              	.L50:
 361              		.align	2
 362              	.L49:
 363 0044 54000000 		.word	.LC5
 364              		.size	chMBPostAheadI, .-chMBPostAheadI
 365 0048 AFF30080 		.section	.text.chMBFetchS,"ax",%progbits
 365      AFF30080 
 366              		.align	2
 367              		.p2align 4,,15
 368              		.global	chMBFetchS
 369              		.thumb
 370              		.thumb_func
 371              		.type	chMBFetchS, %function
 372              	chMBFetchS:
 373              		@ args = 0, pretend = 0, frame = 0
 374              		@ frame_needed = 0, uses_anonymous_args = 0
 375 0000 70B5     		push	{r4, r5, r6, lr}
 376 0002 0446     		mov	r4, r0
 377 0004 0E46     		mov	r6, r1
 378 0006 1546     		mov	r5, r2
 379 0008 FFF7FEFF 		bl	chDbgCheckClassS
 380 000c D4B1     		cbz	r4, .L52
 381 000e CEB1     		cbz	r6, .L52
 382              	.L53:
 383 0010 2946     		mov	r1, r5
 384 0012 04F11000 		add	r0, r4, #16
 385 0016 FFF7FEFF 		bl	chSemWaitTimeoutS
 386 001a 0546     		mov	r5, r0
 387 001c 80B9     		cbnz	r0, .L54
 388 001e E368     		ldr	r3, [r4, #12]
 389 0020 6268     		ldr	r2, [r4, #4]
 390 0022 1968     		ldr	r1, [r3]
 391 0024 0433     		adds	r3, r3, #4
 392 0026 9342     		cmp	r3, r2
 393 0028 E360     		str	r3, [r4, #12]
 394 002a 28BF     		it	cs
 395 002c 2368     		ldrcs	r3, [r4]
 396 002e 3160     		str	r1, [r6]
 397 0030 04F11C00 		add	r0, r4, #28
ARM GAS  /tmp/cc8FkpAd.s 			page 8


 398 0034 28BF     		it	cs
 399 0036 E360     		strcs	r3, [r4, #12]
 400 0038 FFF7FEFF 		bl	chSemSignalI
 401 003c FFF7FEFF 		bl	chSchRescheduleS
 402              	.L54:
 403 0040 2846     		mov	r0, r5
 404 0042 70BD     		pop	{r4, r5, r6, pc}
 405              	.L52:
 406 0044 0148     		ldr	r0, .L59
 407 0046 FFF7FEFF 		bl	chDbgPanic
 408 004a E1E7     		b	.L53
 409              	.L60:
 410              		.align	2
 411              	.L59:
 412 004c 68000000 		.word	.LC6
 413              		.size	chMBFetchS, .-chMBFetchS
 414              		.section	.text.chMBFetch,"ax",%progbits
 415              		.align	2
 416              		.p2align 4,,15
 417              		.global	chMBFetch
 418              		.thumb
 419              		.thumb_func
 420              		.type	chMBFetch, %function
 421              	chMBFetch:
 422              		@ args = 0, pretend = 0, frame = 0
 423              		@ frame_needed = 0, uses_anonymous_args = 0
 424 0000 70B5     		push	{r4, r5, r6, lr}
 425 0002 2023     		movs	r3, #32
 426 0004 0646     		mov	r6, r0
 427 0006 0D46     		mov	r5, r1
 428 0008 1446     		mov	r4, r2
 429              	@ 311 "../../../ChibiOS/os/kernel/src/chmboxes.c" 1
 430 000a 83F31188 		msr     BASEPRI, r3
 431              	@ 0 "" 2
 432              		.thumb
 433 000e FFF7FEFF 		bl	dbg_check_lock
 434 0012 2246     		mov	r2, r4
 435 0014 2946     		mov	r1, r5
 436 0016 3046     		mov	r0, r6
 437 0018 FFF7FEFF 		bl	chMBFetchS
 438 001c 0446     		mov	r4, r0
 439 001e FFF7FEFF 		bl	dbg_check_unlock
 440 0022 0023     		movs	r3, #0
 441              	@ 313 "../../../ChibiOS/os/kernel/src/chmboxes.c" 1
 442 0024 83F31188 		msr     BASEPRI, r3
 443              	@ 0 "" 2
 444              		.thumb
 445 0028 2046     		mov	r0, r4
 446 002a 70BD     		pop	{r4, r5, r6, pc}
 447              		.size	chMBFetch, .-chMBFetch
 448 002c AFF30080 		.section	.text.chMBFetchI,"ax",%progbits
 449              		.align	2
 450              		.p2align 4,,15
 451              		.global	chMBFetchI
 452              		.thumb
 453              		.thumb_func
 454              		.type	chMBFetchI, %function
ARM GAS  /tmp/cc8FkpAd.s 			page 9


 455              	chMBFetchI:
 456              		@ args = 0, pretend = 0, frame = 0
 457              		@ frame_needed = 0, uses_anonymous_args = 0
 458 0000 38B5     		push	{r3, r4, r5, lr}
 459 0002 0446     		mov	r4, r0
 460 0004 0D46     		mov	r5, r1
 461 0006 FFF7FEFF 		bl	chDbgCheckClassI
 462 000a B4B1     		cbz	r4, .L63
 463 000c ADB1     		cbz	r5, .L63
 464              	.L64:
 465 000e A369     		ldr	r3, [r4, #24]
 466 0010 002B     		cmp	r3, #0
 467 0012 16DD     		ble	.L67
 468 0014 5A1E     		subs	r2, r3, #1
 469 0016 E368     		ldr	r3, [r4, #12]
 470 0018 A261     		str	r2, [r4, #24]
 471 001a 6268     		ldr	r2, [r4, #4]
 472 001c 1968     		ldr	r1, [r3]
 473 001e 0433     		adds	r3, r3, #4
 474 0020 9342     		cmp	r3, r2
 475 0022 E360     		str	r3, [r4, #12]
 476 0024 28BF     		it	cs
 477 0026 2368     		ldrcs	r3, [r4]
 478 0028 2960     		str	r1, [r5]
 479 002a 04F11C00 		add	r0, r4, #28
 480 002e 28BF     		it	cs
 481 0030 E360     		strcs	r3, [r4, #12]
 482 0032 FFF7FEFF 		bl	chSemSignalI
 483 0036 0020     		movs	r0, #0
 484 0038 38BD     		pop	{r3, r4, r5, pc}
 485              	.L63:
 486 003a 0348     		ldr	r0, .L71
 487 003c FFF7FEFF 		bl	chDbgPanic
 488 0040 E5E7     		b	.L64
 489              	.L67:
 490 0042 4FF0FF30 		mov	r0, #-1
 491 0046 38BD     		pop	{r3, r4, r5, pc}
 492              	.L72:
 493              		.align	2
 494              	.L71:
 495 0048 78000000 		.word	.LC7
 496              		.size	chMBFetchI, .-chMBFetchI
 497 004c AFF30080 		.section	.rodata.str1.4,"aMS",%progbits,1
 498              		.align	2
 499              	.LC0:
 500 0000 2263684D 		.ascii	"\"chMBInit\"()\000"
 500      42496E69 
 500      74222829 
 500      00
 501 000d 000000   		.space	3
 502              	.LC1:
 503 0010 2263684D 		.ascii	"\"chMBReset\"()\000"
 503      42526573 
 503      65742228 
 503      2900
 504 001e 0000     		.space	2
 505              	.LC2:
ARM GAS  /tmp/cc8FkpAd.s 			page 10


 506 0020 2263684D 		.ascii	"\"chMBPostS\"()\000"
 506      42506F73 
 506      74532228 
 506      2900
 507 002e 0000     		.space	2
 508              	.LC3:
 509 0030 2263684D 		.ascii	"\"chMBPostI\"()\000"
 509      42506F73 
 509      74492228 
 509      2900
 510 003e 0000     		.space	2
 511              	.LC4:
 512 0040 2263684D 		.ascii	"\"chMBPostAheadS\"()\000"
 512      42506F73 
 512      74416865 
 512      61645322 
 512      282900
 513 0053 00       		.space	1
 514              	.LC5:
 515 0054 2263684D 		.ascii	"\"chMBPostAheadI\"()\000"
 515      42506F73 
 515      74416865 
 515      61644922 
 515      282900
 516 0067 00       		.space	1
 517              	.LC6:
 518 0068 2263684D 		.ascii	"\"chMBFetchS\"()\000"
 518      42466574 
 518      63685322 
 518      282900
 519 0077 00       		.space	1
 520              	.LC7:
 521 0078 2263684D 		.ascii	"\"chMBFetchI\"()\000"
 521      42466574 
 521      63684922 
 521      282900
 522 0087 00       		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.3 20140228 (release) [ARM/embedded-4_8-br
ARM GAS  /tmp/cc8FkpAd.s 			page 11


DEFINED SYMBOLS
                            *ABS*:00000000 chmboxes.c
     /tmp/cc8FkpAd.s:18     .text.chMBInit:00000000 $t
     /tmp/cc8FkpAd.s:24     .text.chMBInit:00000000 chMBInit
     /tmp/cc8FkpAd.s:55     .text.chMBInit:0000003c $d
     /tmp/cc8FkpAd.s:58     .text.chMBReset:00000000 $t
     /tmp/cc8FkpAd.s:64     .text.chMBReset:00000000 chMBReset
     /tmp/cc8FkpAd.s:103    .text.chMBReset:00000048 $d
     /tmp/cc8FkpAd.s:106    .text.chMBPostS:00000000 $t
     /tmp/cc8FkpAd.s:112    .text.chMBPostS:00000000 chMBPostS
     /tmp/cc8FkpAd.s:150    .text.chMBPostS:00000048 $d
     /tmp/cc8FkpAd.s:153    .text.chMBPost:00000000 $t
     /tmp/cc8FkpAd.s:159    .text.chMBPost:00000000 chMBPost
     /tmp/cc8FkpAd.s:187    .text.chMBPostI:00000000 $t
     /tmp/cc8FkpAd.s:193    .text.chMBPostI:00000000 chMBPostI
     /tmp/cc8FkpAd.s:231    .text.chMBPostI:00000044 $d
     /tmp/cc8FkpAd.s:234    .text.chMBPostAheadS:00000000 $t
     /tmp/cc8FkpAd.s:240    .text.chMBPostAheadS:00000000 chMBPostAheadS
     /tmp/cc8FkpAd.s:281    .text.chMBPostAheadS:0000004c $d
     /tmp/cc8FkpAd.s:284    .text.chMBPostAhead:00000000 $t
     /tmp/cc8FkpAd.s:290    .text.chMBPostAhead:00000000 chMBPostAhead
     /tmp/cc8FkpAd.s:318    .text.chMBPostAheadI:00000000 $t
     /tmp/cc8FkpAd.s:324    .text.chMBPostAheadI:00000000 chMBPostAheadI
     /tmp/cc8FkpAd.s:363    .text.chMBPostAheadI:00000044 $d
     /tmp/cc8FkpAd.s:366    .text.chMBFetchS:00000000 $t
     /tmp/cc8FkpAd.s:372    .text.chMBFetchS:00000000 chMBFetchS
     /tmp/cc8FkpAd.s:412    .text.chMBFetchS:0000004c $d
     /tmp/cc8FkpAd.s:415    .text.chMBFetch:00000000 $t
     /tmp/cc8FkpAd.s:421    .text.chMBFetch:00000000 chMBFetch
     /tmp/cc8FkpAd.s:449    .text.chMBFetchI:00000000 $t
     /tmp/cc8FkpAd.s:455    .text.chMBFetchI:00000000 chMBFetchI
     /tmp/cc8FkpAd.s:495    .text.chMBFetchI:00000048 $d
     /tmp/cc8FkpAd.s:498    .rodata.str1.4:00000000 $d
     /tmp/cc8FkpAd.s:105    .text.chMBReset:0000004c $t
     /tmp/cc8FkpAd.s:152    .text.chMBPostS:0000004c $t
     /tmp/cc8FkpAd.s:233    .text.chMBPostI:00000048 $t
     /tmp/cc8FkpAd.s:365    .text.chMBPostAheadI:00000048 $t
     /tmp/cc8FkpAd.s:497    .text.chMBFetchI:0000004c $t

UNDEFINED SYMBOLS
chSemInit
chDbgPanic
dbg_check_lock
chSemResetI
chSchRescheduleS
dbg_check_unlock
chDbgCheckClassS
chSemWaitTimeoutS
chSemSignalI
chDbgCheckClassI
