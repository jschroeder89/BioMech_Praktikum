ARM GAS  /tmp/ccKhzG6h.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 2
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"serial.c"
  17              		.section	.text.readt,"ax",%progbits
  18              		.align	2
  19              		.p2align 4,,15
  20              		.thumb
  21              		.thumb_func
  22              		.type	readt, %function
  23              	readt:
  24              		@ args = 0, pretend = 0, frame = 0
  25              		@ frame_needed = 0, uses_anonymous_args = 0
  26              		@ link register save eliminated.
  27 0000 0C30     		adds	r0, r0, #12
  28 0002 FFF7FEBF 		b	chIQReadTimeout
  29              		.size	readt, .-readt
  30 0006 00BFAFF3 		.section	.text.read,"ax",%progbits
  30      0080AFF3 
  30      0080
  31              		.align	2
  32              		.p2align 4,,15
  33              		.thumb
  34              		.thumb_func
  35              		.type	read, %function
  36              	read:
  37              		@ args = 0, pretend = 0, frame = 0
  38              		@ frame_needed = 0, uses_anonymous_args = 0
  39              		@ link register save eliminated.
  40 0000 0C30     		adds	r0, r0, #12
  41 0002 4FF0FF33 		mov	r3, #-1
  42 0006 FFF7FEBF 		b	chIQReadTimeout
  43              		.size	read, .-read
  44 000a 00BFAFF3 		.section	.text.writet,"ax",%progbits
  44      0080
  45              		.align	2
  46              		.p2align 4,,15
  47              		.thumb
  48              		.thumb_func
  49              		.type	writet, %function
  50              	writet:
  51              		@ args = 0, pretend = 0, frame = 0
  52              		@ frame_needed = 0, uses_anonymous_args = 0
  53              		@ link register save eliminated.
  54 0000 3030     		adds	r0, r0, #48
ARM GAS  /tmp/ccKhzG6h.s 			page 2


  55 0002 FFF7FEBF 		b	chOQWriteTimeout
  56              		.size	writet, .-writet
  57 0006 00BFAFF3 		.section	.text.write,"ax",%progbits
  57      0080AFF3 
  57      0080
  58              		.align	2
  59              		.p2align 4,,15
  60              		.thumb
  61              		.thumb_func
  62              		.type	write, %function
  63              	write:
  64              		@ args = 0, pretend = 0, frame = 0
  65              		@ frame_needed = 0, uses_anonymous_args = 0
  66              		@ link register save eliminated.
  67 0000 3030     		adds	r0, r0, #48
  68 0002 4FF0FF33 		mov	r3, #-1
  69 0006 FFF7FEBF 		b	chOQWriteTimeout
  70              		.size	write, .-write
  71 000a 00BFAFF3 		.section	.text.gett,"ax",%progbits
  71      0080
  72              		.align	2
  73              		.p2align 4,,15
  74              		.thumb
  75              		.thumb_func
  76              		.type	gett, %function
  77              	gett:
  78              		@ args = 0, pretend = 0, frame = 0
  79              		@ frame_needed = 0, uses_anonymous_args = 0
  80              		@ link register save eliminated.
  81 0000 0C30     		adds	r0, r0, #12
  82 0002 FFF7FEBF 		b	chIQGetTimeout
  83              		.size	gett, .-gett
  84 0006 00BFAFF3 		.section	.text.get,"ax",%progbits
  84      0080AFF3 
  84      0080
  85              		.align	2
  86              		.p2align 4,,15
  87              		.thumb
  88              		.thumb_func
  89              		.type	get, %function
  90              	get:
  91              		@ args = 0, pretend = 0, frame = 0
  92              		@ frame_needed = 0, uses_anonymous_args = 0
  93              		@ link register save eliminated.
  94 0000 0C30     		adds	r0, r0, #12
  95 0002 4FF0FF31 		mov	r1, #-1
  96 0006 FFF7FEBF 		b	chIQGetTimeout
  97              		.size	get, .-get
  98 000a 00BFAFF3 		.section	.text.putt,"ax",%progbits
  98      0080
  99              		.align	2
 100              		.p2align 4,,15
 101              		.thumb
 102              		.thumb_func
 103              		.type	putt, %function
 104              	putt:
 105              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccKhzG6h.s 			page 3


 106              		@ frame_needed = 0, uses_anonymous_args = 0
 107              		@ link register save eliminated.
 108 0000 3030     		adds	r0, r0, #48
 109 0002 FFF7FEBF 		b	chOQPutTimeout
 110              		.size	putt, .-putt
 111 0006 00BFAFF3 		.section	.text.put,"ax",%progbits
 111      0080AFF3 
 111      0080
 112              		.align	2
 113              		.p2align 4,,15
 114              		.thumb
 115              		.thumb_func
 116              		.type	put, %function
 117              	put:
 118              		@ args = 0, pretend = 0, frame = 0
 119              		@ frame_needed = 0, uses_anonymous_args = 0
 120              		@ link register save eliminated.
 121 0000 3030     		adds	r0, r0, #48
 122 0002 4FF0FF32 		mov	r2, #-1
 123 0006 FFF7FEBF 		b	chOQPutTimeout
 124              		.size	put, .-put
 125 000a 00BFAFF3 		.section	.text.sdInit,"ax",%progbits
 125      0080
 126              		.align	2
 127              		.p2align 4,,15
 128              		.global	sdInit
 129              		.thumb
 130              		.thumb_func
 131              		.type	sdInit, %function
 132              	sdInit:
 133              		@ args = 0, pretend = 0, frame = 0
 134              		@ frame_needed = 0, uses_anonymous_args = 0
 135              		@ link register save eliminated.
 136 0000 FFF7FEBF 		b	sd_lld_init
 137              		.size	sdInit, .-sdInit
 138 0004 AFF30080 		.section	.text.sdObjectInit,"ax",%progbits
 138      AFF30080 
 138      AFF30080 
 139              		.align	2
 140              		.p2align 4,,15
 141              		.global	sdObjectInit
 142              		.thumb
 143              		.thumb_func
 144              		.type	sdObjectInit, %function
 145              	sdObjectInit:
 146              		@ args = 0, pretend = 0, frame = 0
 147              		@ frame_needed = 0, uses_anonymous_args = 0
 148 0000 70B5     		push	{r4, r5, r6, lr}
 149 0002 0E4B     		ldr	r3, .L11
 150 0004 0446     		mov	r4, r0
 151 0006 82B0     		sub	sp, sp, #8
 152 0008 40F8043B 		str	r3, [r0], #4
 153 000c 0126     		movs	r6, #1
 154 000e 0094     		str	r4, [sp]
 155 0010 0B46     		mov	r3, r1
 156 0012 1546     		mov	r5, r2
 157 0014 6060     		str	r0, [r4, #4]
ARM GAS  /tmp/ccKhzG6h.s 			page 4


 158 0016 04F15401 		add	r1, r4, #84
 159 001a 04F10C00 		add	r0, r4, #12
 160 001e 2672     		strb	r6, [r4, #8]
 161 0020 4022     		movs	r2, #64
 162 0022 FFF7FEFF 		bl	chIQInit
 163 0026 0094     		str	r4, [sp]
 164 0028 2B46     		mov	r3, r5
 165 002a 04F13000 		add	r0, r4, #48
 166 002e 04F19401 		add	r1, r4, #148
 167 0032 4022     		movs	r2, #64
 168 0034 FFF7FEFF 		bl	chOQInit
 169 0038 02B0     		add	sp, sp, #8
 170              		@ sp needed
 171 003a 70BD     		pop	{r4, r5, r6, pc}
 172              	.L12:
 173              		.align	2
 174              	.L11:
 175 003c 00000000 		.word	.LANCHOR0
 176              		.size	sdObjectInit, .-sdObjectInit
 177              		.section	.text.sdStart,"ax",%progbits
 178              		.align	2
 179              		.p2align 4,,15
 180              		.global	sdStart
 181              		.thumb
 182              		.thumb_func
 183              		.type	sdStart, %function
 184              	sdStart:
 185              		@ args = 0, pretend = 0, frame = 0
 186              		@ frame_needed = 0, uses_anonymous_args = 0
 187 0000 38B5     		push	{r3, r4, r5, lr}
 188 0002 0446     		mov	r4, r0
 189 0004 0D46     		mov	r5, r1
 190 0006 B8B1     		cbz	r0, .L17
 191              	.L14:
 192 0008 2023     		movs	r3, #32
 193              	@ 163 "../../../ChibiOS/os/hal/src/serial.c" 1
 194 000a 83F31188 		msr     BASEPRI, r3
 195              	@ 0 "" 2
 196              		.thumb
 197 000e FFF7FEFF 		bl	dbg_check_lock
 198 0012 237A     		ldrb	r3, [r4, #8]	@ zero_extendqisi2
 199 0014 013B     		subs	r3, r3, #1
 200 0016 012B     		cmp	r3, #1
 201 0018 02D9     		bls	.L15
 202 001a 0948     		ldr	r0, .L18
 203 001c FFF7FEFF 		bl	chDbgPanic
 204              	.L15:
 205 0020 2946     		mov	r1, r5
 206 0022 2046     		mov	r0, r4
 207 0024 FFF7FEFF 		bl	sd_lld_start
 208 0028 0223     		movs	r3, #2
 209 002a 2372     		strb	r3, [r4, #8]
 210 002c FFF7FEFF 		bl	dbg_check_unlock
 211 0030 0023     		movs	r3, #0
 212              	@ 169 "../../../ChibiOS/os/hal/src/serial.c" 1
 213 0032 83F31188 		msr     BASEPRI, r3
 214              	@ 0 "" 2
ARM GAS  /tmp/ccKhzG6h.s 			page 5


 215              		.thumb
 216 0036 38BD     		pop	{r3, r4, r5, pc}
 217              	.L17:
 218 0038 0248     		ldr	r0, .L18+4
 219 003a FFF7FEFF 		bl	chDbgPanic
 220 003e E3E7     		b	.L14
 221              	.L19:
 222              		.align	2
 223              	.L18:
 224 0040 0C000000 		.word	.LC1
 225 0044 00000000 		.word	.LC0
 226              		.size	sdStart, .-sdStart
 227 0048 AFF30080 		.section	.text.sdStop,"ax",%progbits
 227      AFF30080 
 228              		.align	2
 229              		.p2align 4,,15
 230              		.global	sdStop
 231              		.thumb
 232              		.thumb_func
 233              		.type	sdStop, %function
 234              	sdStop:
 235              		@ args = 0, pretend = 0, frame = 0
 236              		@ frame_needed = 0, uses_anonymous_args = 0
 237 0000 10B5     		push	{r4, lr}
 238 0002 0446     		mov	r4, r0
 239 0004 00B3     		cbz	r0, .L23
 240              	.L21:
 241 0006 2023     		movs	r3, #32
 242              	@ 185 "../../../ChibiOS/os/hal/src/serial.c" 1
 243 0008 83F31188 		msr     BASEPRI, r3
 244              	@ 0 "" 2
 245              		.thumb
 246 000c FFF7FEFF 		bl	dbg_check_lock
 247 0010 237A     		ldrb	r3, [r4, #8]	@ zero_extendqisi2
 248 0012 013B     		subs	r3, r3, #1
 249 0014 012B     		cmp	r3, #1
 250 0016 02D9     		bls	.L22
 251 0018 0D48     		ldr	r0, .L24
 252 001a FFF7FEFF 		bl	chDbgPanic
 253              	.L22:
 254 001e 2046     		mov	r0, r4
 255 0020 FFF7FEFF 		bl	sd_lld_stop
 256 0024 0123     		movs	r3, #1
 257 0026 2372     		strb	r3, [r4, #8]
 258 0028 04F13000 		add	r0, r4, #48
 259 002c FFF7FEFF 		bl	chOQResetI
 260 0030 04F10C00 		add	r0, r4, #12
 261 0034 FFF7FEFF 		bl	chIQResetI
 262 0038 FFF7FEFF 		bl	chSchRescheduleS
 263 003c FFF7FEFF 		bl	dbg_check_unlock
 264 0040 0023     		movs	r3, #0
 265              	@ 194 "../../../ChibiOS/os/hal/src/serial.c" 1
 266 0042 83F31188 		msr     BASEPRI, r3
 267              	@ 0 "" 2
 268              		.thumb
 269 0046 10BD     		pop	{r4, pc}
 270              	.L23:
ARM GAS  /tmp/ccKhzG6h.s 			page 6


 271 0048 0248     		ldr	r0, .L24+4
 272 004a FFF7FEFF 		bl	chDbgPanic
 273 004e DAE7     		b	.L21
 274              	.L25:
 275              		.align	2
 276              	.L24:
 277 0050 28000000 		.word	.LC3
 278 0054 1C000000 		.word	.LC2
 279              		.size	sdStop, .-sdStop
 280 0058 AFF30080 		.section	.text.sdIncomingDataI,"ax",%progbits
 280      AFF30080 
 281              		.align	2
 282              		.p2align 4,,15
 283              		.global	sdIncomingDataI
 284              		.thumb
 285              		.thumb_func
 286              		.type	sdIncomingDataI, %function
 287              	sdIncomingDataI:
 288              		@ args = 0, pretend = 0, frame = 0
 289              		@ frame_needed = 0, uses_anonymous_args = 0
 290 0000 38B5     		push	{r3, r4, r5, lr}
 291 0002 0446     		mov	r4, r0
 292 0004 0D46     		mov	r5, r1
 293 0006 FFF7FEFF 		bl	chDbgCheckClassI
 294 000a D4B1     		cbz	r4, .L30
 295              	.L27:
 296 000c 6369     		ldr	r3, [r4, #20]
 297 000e 3BB1     		cbz	r3, .L31
 298 0010 2946     		mov	r1, r5
 299 0012 04F10C00 		add	r0, r4, #12
 300 0016 FFF7FEFF 		bl	chIQPutI
 301 001a 0028     		cmp	r0, #0
 302 001c 0BDB     		blt	.L32
 303              	.L26:
 304 001e 38BD     		pop	{r3, r4, r5, pc}
 305              	.L31:
 306 0020 201D     		adds	r0, r4, #4
 307 0022 0421     		movs	r1, #4
 308 0024 FFF7FEFF 		bl	chEvtBroadcastFlagsI
 309 0028 2946     		mov	r1, r5
 310 002a 04F10C00 		add	r0, r4, #12
 311 002e FFF7FEFF 		bl	chIQPutI
 312 0032 0028     		cmp	r0, #0
 313 0034 F3DA     		bge	.L26
 314              	.L32:
 315 0036 201D     		adds	r0, r4, #4
 316 0038 8021     		movs	r1, #128
 317 003a BDE83840 		pop	{r3, r4, r5, lr}
 318 003e FFF7FEBF 		b	chEvtBroadcastFlagsI
 319              	.L30:
 320 0042 0248     		ldr	r0, .L33
 321 0044 FFF7FEFF 		bl	chDbgPanic
 322 0048 E0E7     		b	.L27
 323              	.L34:
 324 004a 00BF     		.align	2
 325              	.L33:
 326 004c 38000000 		.word	.LC4
ARM GAS  /tmp/ccKhzG6h.s 			page 7


 327              		.size	sdIncomingDataI, .-sdIncomingDataI
 328              		.section	.text.sdRequestDataI,"ax",%progbits
 329              		.align	2
 330              		.p2align 4,,15
 331              		.global	sdRequestDataI
 332              		.thumb
 333              		.thumb_func
 334              		.type	sdRequestDataI, %function
 335              	sdRequestDataI:
 336              		@ args = 0, pretend = 0, frame = 0
 337              		@ frame_needed = 0, uses_anonymous_args = 0
 338 0000 38B5     		push	{r3, r4, r5, lr}
 339 0002 0446     		mov	r4, r0
 340 0004 FFF7FEFF 		bl	chDbgCheckClassI
 341 0008 6CB1     		cbz	r4, .L38
 342              	.L36:
 343 000a 04F13000 		add	r0, r4, #48
 344 000e FFF7FEFF 		bl	chOQGetI
 345 0012 051E     		subs	r5, r0, #0
 346 0014 01DB     		blt	.L39
 347 0016 2846     		mov	r0, r5
 348 0018 38BD     		pop	{r3, r4, r5, pc}
 349              	.L39:
 350 001a 201D     		adds	r0, r4, #4
 351 001c 0821     		movs	r1, #8
 352 001e FFF7FEFF 		bl	chEvtBroadcastFlagsI
 353 0022 2846     		mov	r0, r5
 354 0024 38BD     		pop	{r3, r4, r5, pc}
 355              	.L38:
 356 0026 0248     		ldr	r0, .L40
 357 0028 FFF7FEFF 		bl	chDbgPanic
 358 002c EDE7     		b	.L36
 359              	.L41:
 360 002e 00BF     		.align	2
 361              	.L40:
 362 0030 4C000000 		.word	.LC5
 363              		.size	sdRequestDataI, .-sdRequestDataI
 364 0034 AFF30080 		.section	.rodata.str1.4,"aMS",%progbits,1
 364      AFF30080 
 364      AFF30080 
 365              		.align	2
 366              	.LC0:
 367 0000 22736453 		.ascii	"\"sdStart\"()\000"
 367      74617274 
 367      22282900 
 368              	.LC1:
 369 000c 73645374 		.ascii	"sdStart(), #1\000"
 369      61727428 
 369      292C2023 
 369      3100
 370 001a 0000     		.space	2
 371              	.LC2:
 372 001c 22736453 		.ascii	"\"sdStop\"()\000"
 372      746F7022 
 372      282900
 373 0027 00       		.space	1
 374              	.LC3:
ARM GAS  /tmp/ccKhzG6h.s 			page 8


 375 0028 73645374 		.ascii	"sdStop(), #1\000"
 375      6F702829 
 375      2C202331 
 375      00
 376 0035 000000   		.space	3
 377              	.LC4:
 378 0038 22736449 		.ascii	"\"sdIncomingDataI\"()\000"
 378      6E636F6D 
 378      696E6744 
 378      61746149 
 378      22282900 
 379              	.LC5:
 380 004c 22736452 		.ascii	"\"sdRequestDataI\"()\000"
 380      65717565 
 380      73744461 
 380      74614922 
 380      282900
 381 005f 00       		.section	.rodata.vmt,"a",%progbits
 382              		.align	2
 383              		.set	.LANCHOR0,. + 0
 384              		.type	vmt, %object
 385              		.size	vmt, 32
 386              	vmt:
 387 0000 00000000 		.word	write
 388 0004 00000000 		.word	read
 389 0008 00000000 		.word	put
 390 000c 00000000 		.word	get
 391 0010 00000000 		.word	putt
 392 0014 00000000 		.word	gett
 393 0018 00000000 		.word	writet
 394 001c 00000000 		.word	readt
 395              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.3 20140228 (release) [ARM/embedded-4_8-br
ARM GAS  /tmp/ccKhzG6h.s 			page 9


DEFINED SYMBOLS
                            *ABS*:00000000 serial.c
     /tmp/ccKhzG6h.s:18     .text.readt:00000000 $t
     /tmp/ccKhzG6h.s:23     .text.readt:00000000 readt
     /tmp/ccKhzG6h.s:31     .text.read:00000000 $t
     /tmp/ccKhzG6h.s:36     .text.read:00000000 read
     /tmp/ccKhzG6h.s:45     .text.writet:00000000 $t
     /tmp/ccKhzG6h.s:50     .text.writet:00000000 writet
     /tmp/ccKhzG6h.s:58     .text.write:00000000 $t
     /tmp/ccKhzG6h.s:63     .text.write:00000000 write
     /tmp/ccKhzG6h.s:72     .text.gett:00000000 $t
     /tmp/ccKhzG6h.s:77     .text.gett:00000000 gett
     /tmp/ccKhzG6h.s:85     .text.get:00000000 $t
     /tmp/ccKhzG6h.s:90     .text.get:00000000 get
     /tmp/ccKhzG6h.s:99     .text.putt:00000000 $t
     /tmp/ccKhzG6h.s:104    .text.putt:00000000 putt
     /tmp/ccKhzG6h.s:112    .text.put:00000000 $t
     /tmp/ccKhzG6h.s:117    .text.put:00000000 put
     /tmp/ccKhzG6h.s:126    .text.sdInit:00000000 $t
     /tmp/ccKhzG6h.s:132    .text.sdInit:00000000 sdInit
     /tmp/ccKhzG6h.s:139    .text.sdObjectInit:00000000 $t
     /tmp/ccKhzG6h.s:145    .text.sdObjectInit:00000000 sdObjectInit
     /tmp/ccKhzG6h.s:175    .text.sdObjectInit:0000003c $d
     /tmp/ccKhzG6h.s:178    .text.sdStart:00000000 $t
     /tmp/ccKhzG6h.s:184    .text.sdStart:00000000 sdStart
     /tmp/ccKhzG6h.s:224    .text.sdStart:00000040 $d
     /tmp/ccKhzG6h.s:228    .text.sdStop:00000000 $t
     /tmp/ccKhzG6h.s:234    .text.sdStop:00000000 sdStop
     /tmp/ccKhzG6h.s:277    .text.sdStop:00000050 $d
     /tmp/ccKhzG6h.s:281    .text.sdIncomingDataI:00000000 $t
     /tmp/ccKhzG6h.s:287    .text.sdIncomingDataI:00000000 sdIncomingDataI
     /tmp/ccKhzG6h.s:326    .text.sdIncomingDataI:0000004c $d
     /tmp/ccKhzG6h.s:329    .text.sdRequestDataI:00000000 $t
     /tmp/ccKhzG6h.s:335    .text.sdRequestDataI:00000000 sdRequestDataI
     /tmp/ccKhzG6h.s:362    .text.sdRequestDataI:00000030 $d
     /tmp/ccKhzG6h.s:365    .rodata.str1.4:00000000 $d
     /tmp/ccKhzG6h.s:382    .rodata.vmt:00000000 $d
     /tmp/ccKhzG6h.s:386    .rodata.vmt:00000000 vmt
     /tmp/ccKhzG6h.s:227    .text.sdStart:00000048 $t
     /tmp/ccKhzG6h.s:280    .text.sdStop:00000058 $t
     /tmp/ccKhzG6h.s:364    .text.sdRequestDataI:00000034 $t

UNDEFINED SYMBOLS
chIQReadTimeout
chOQWriteTimeout
chIQGetTimeout
chOQPutTimeout
sd_lld_init
chIQInit
chOQInit
dbg_check_lock
chDbgPanic
sd_lld_start
dbg_check_unlock
sd_lld_stop
chOQResetI
chIQResetI
ARM GAS  /tmp/ccKhzG6h.s 			page 10


chSchRescheduleS
chDbgCheckClassI
chIQPutI
chEvtBroadcastFlagsI
chOQGetI
