ARM GAS  /tmp/ccWlK009.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"serial.c"
  15              		.section	.text.readt,"ax",%progbits
  16              		.align	2
  17              		.p2align 4,,15
  18              		.thumb
  19              		.thumb_func
  20              		.type	readt, %function
  21              	readt:
  22              		@ args = 0, pretend = 0, frame = 0
  23              		@ frame_needed = 0, uses_anonymous_args = 0
  24              		@ link register save eliminated.
  25 0000 0C30     		adds	r0, r0, #12
  26 0002 FFF7FEBF 		b	chIQReadTimeout
  27              		.size	readt, .-readt
  28 0006 00BFAFF3 		.section	.text.read,"ax",%progbits
  28      0080AFF3 
  28      0080
  29              		.align	2
  30              		.p2align 4,,15
  31              		.thumb
  32              		.thumb_func
  33              		.type	read, %function
  34              	read:
  35              		@ args = 0, pretend = 0, frame = 0
  36              		@ frame_needed = 0, uses_anonymous_args = 0
  37              		@ link register save eliminated.
  38 0000 0C30     		adds	r0, r0, #12
  39 0002 4FF0FF33 		mov	r3, #-1
  40 0006 FFF7FEBF 		b	chIQReadTimeout
  41              		.size	read, .-read
  42 000a 00BFAFF3 		.section	.text.writet,"ax",%progbits
  42      0080
  43              		.align	2
  44              		.p2align 4,,15
  45              		.thumb
  46              		.thumb_func
  47              		.type	writet, %function
  48              	writet:
  49              		@ args = 0, pretend = 0, frame = 0
  50              		@ frame_needed = 0, uses_anonymous_args = 0
  51              		@ link register save eliminated.
  52 0000 3030     		adds	r0, r0, #48
  53 0002 FFF7FEBF 		b	chOQWriteTimeout
  54              		.size	writet, .-writet
ARM GAS  /tmp/ccWlK009.s 			page 2


  55 0006 00BFAFF3 		.section	.text.write,"ax",%progbits
  55      0080AFF3 
  55      0080
  56              		.align	2
  57              		.p2align 4,,15
  58              		.thumb
  59              		.thumb_func
  60              		.type	write, %function
  61              	write:
  62              		@ args = 0, pretend = 0, frame = 0
  63              		@ frame_needed = 0, uses_anonymous_args = 0
  64              		@ link register save eliminated.
  65 0000 3030     		adds	r0, r0, #48
  66 0002 4FF0FF33 		mov	r3, #-1
  67 0006 FFF7FEBF 		b	chOQWriteTimeout
  68              		.size	write, .-write
  69 000a 00BFAFF3 		.section	.text.gett,"ax",%progbits
  69      0080
  70              		.align	2
  71              		.p2align 4,,15
  72              		.thumb
  73              		.thumb_func
  74              		.type	gett, %function
  75              	gett:
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              		@ link register save eliminated.
  79 0000 0C30     		adds	r0, r0, #12
  80 0002 FFF7FEBF 		b	chIQGetTimeout
  81              		.size	gett, .-gett
  82 0006 00BFAFF3 		.section	.text.get,"ax",%progbits
  82      0080AFF3 
  82      0080
  83              		.align	2
  84              		.p2align 4,,15
  85              		.thumb
  86              		.thumb_func
  87              		.type	get, %function
  88              	get:
  89              		@ args = 0, pretend = 0, frame = 0
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91              		@ link register save eliminated.
  92 0000 0C30     		adds	r0, r0, #12
  93 0002 4FF0FF31 		mov	r1, #-1
  94 0006 FFF7FEBF 		b	chIQGetTimeout
  95              		.size	get, .-get
  96 000a 00BFAFF3 		.section	.text.putt,"ax",%progbits
  96      0080
  97              		.align	2
  98              		.p2align 4,,15
  99              		.thumb
 100              		.thumb_func
 101              		.type	putt, %function
 102              	putt:
 103              		@ args = 0, pretend = 0, frame = 0
 104              		@ frame_needed = 0, uses_anonymous_args = 0
 105              		@ link register save eliminated.
ARM GAS  /tmp/ccWlK009.s 			page 3


 106 0000 3030     		adds	r0, r0, #48
 107 0002 FFF7FEBF 		b	chOQPutTimeout
 108              		.size	putt, .-putt
 109 0006 00BFAFF3 		.section	.text.put,"ax",%progbits
 109      0080AFF3 
 109      0080
 110              		.align	2
 111              		.p2align 4,,15
 112              		.thumb
 113              		.thumb_func
 114              		.type	put, %function
 115              	put:
 116              		@ args = 0, pretend = 0, frame = 0
 117              		@ frame_needed = 0, uses_anonymous_args = 0
 118              		@ link register save eliminated.
 119 0000 3030     		adds	r0, r0, #48
 120 0002 4FF0FF32 		mov	r2, #-1
 121 0006 FFF7FEBF 		b	chOQPutTimeout
 122              		.size	put, .-put
 123 000a 00BFAFF3 		.section	.text.sdInit,"ax",%progbits
 123      0080
 124              		.align	2
 125              		.p2align 4,,15
 126              		.global	sdInit
 127              		.thumb
 128              		.thumb_func
 129              		.type	sdInit, %function
 130              	sdInit:
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              		@ link register save eliminated.
 134 0000 FFF7FEBF 		b	sd_lld_init
 135              		.size	sdInit, .-sdInit
 136 0004 AFF30080 		.section	.text.sdObjectInit,"ax",%progbits
 136      AFF30080 
 136      AFF30080 
 137              		.align	2
 138              		.p2align 4,,15
 139              		.global	sdObjectInit
 140              		.thumb
 141              		.thumb_func
 142              		.type	sdObjectInit, %function
 143              	sdObjectInit:
 144              		@ args = 0, pretend = 0, frame = 0
 145              		@ frame_needed = 0, uses_anonymous_args = 0
 146 0000 70B5     		push	{r4, r5, r6, lr}
 147 0002 0E4D     		ldr	r5, .L11
 148 0004 0446     		mov	r4, r0
 149 0006 82B0     		sub	sp, sp, #8
 150 0008 40F8045B 		str	r5, [r0], #4
 151 000c 0126     		movs	r6, #1
 152 000e 0094     		str	r4, [sp]
 153 0010 0B46     		mov	r3, r1
 154 0012 1546     		mov	r5, r2
 155 0014 6060     		str	r0, [r4, #4]
 156 0016 04F15401 		add	r1, r4, #84
 157 001a 04F10C00 		add	r0, r4, #12
ARM GAS  /tmp/ccWlK009.s 			page 4


 158 001e 2672     		strb	r6, [r4, #8]
 159 0020 4022     		movs	r2, #64
 160 0022 FFF7FEFF 		bl	chIQInit
 161 0026 0094     		str	r4, [sp]
 162 0028 2B46     		mov	r3, r5
 163 002a 04F13000 		add	r0, r4, #48
 164 002e 04F19401 		add	r1, r4, #148
 165 0032 4022     		movs	r2, #64
 166 0034 FFF7FEFF 		bl	chOQInit
 167 0038 02B0     		add	sp, sp, #8
 168              		@ sp needed
 169 003a 70BD     		pop	{r4, r5, r6, pc}
 170              	.L12:
 171              		.align	2
 172              	.L11:
 173 003c 00000000 		.word	.LANCHOR0
 174              		.size	sdObjectInit, .-sdObjectInit
 175              		.section	.text.sdStart,"ax",%progbits
 176              		.align	2
 177              		.p2align 4,,15
 178              		.global	sdStart
 179              		.thumb
 180              		.thumb_func
 181              		.type	sdStart, %function
 182              	sdStart:
 183              		@ args = 0, pretend = 0, frame = 0
 184              		@ frame_needed = 0, uses_anonymous_args = 0
 185 0000 38B5     		push	{r3, r4, r5, lr}
 186 0002 0446     		mov	r4, r0
 187 0004 0D46     		mov	r5, r1
 188 0006 B8B1     		cbz	r0, .L17
 189              	.L14:
 190 0008 2023     		movs	r3, #32
 191              	@ 163 "../../../ChibiOS/os/hal/src/serial.c" 1
 192 000a 83F31188 		msr     BASEPRI, r3
 193              	@ 0 "" 2
 194              		.thumb
 195 000e FFF7FEFF 		bl	dbg_check_lock
 196 0012 237A     		ldrb	r3, [r4, #8]	@ zero_extendqisi2
 197 0014 013B     		subs	r3, r3, #1
 198 0016 012B     		cmp	r3, #1
 199 0018 02D9     		bls	.L15
 200 001a 0948     		ldr	r0, .L18
 201 001c FFF7FEFF 		bl	chDbgPanic
 202              	.L15:
 203 0020 2946     		mov	r1, r5
 204 0022 2046     		mov	r0, r4
 205 0024 FFF7FEFF 		bl	sd_lld_start
 206 0028 0223     		movs	r3, #2
 207 002a 2372     		strb	r3, [r4, #8]
 208 002c FFF7FEFF 		bl	dbg_check_unlock
 209 0030 0023     		movs	r3, #0
 210              	@ 169 "../../../ChibiOS/os/hal/src/serial.c" 1
 211 0032 83F31188 		msr     BASEPRI, r3
 212              	@ 0 "" 2
 213              		.thumb
 214 0036 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  /tmp/ccWlK009.s 			page 5


 215              	.L17:
 216 0038 0248     		ldr	r0, .L18+4
 217 003a FFF7FEFF 		bl	chDbgPanic
 218 003e E3E7     		b	.L14
 219              	.L19:
 220              		.align	2
 221              	.L18:
 222 0040 0C000000 		.word	.LC1
 223 0044 00000000 		.word	.LC0
 224              		.size	sdStart, .-sdStart
 225 0048 AFF30080 		.section	.text.sdStop,"ax",%progbits
 225      AFF30080 
 226              		.align	2
 227              		.p2align 4,,15
 228              		.global	sdStop
 229              		.thumb
 230              		.thumb_func
 231              		.type	sdStop, %function
 232              	sdStop:
 233              		@ args = 0, pretend = 0, frame = 0
 234              		@ frame_needed = 0, uses_anonymous_args = 0
 235 0000 10B5     		push	{r4, lr}
 236 0002 0446     		mov	r4, r0
 237 0004 00B3     		cbz	r0, .L23
 238              	.L21:
 239 0006 2023     		movs	r3, #32
 240              	@ 185 "../../../ChibiOS/os/hal/src/serial.c" 1
 241 0008 83F31188 		msr     BASEPRI, r3
 242              	@ 0 "" 2
 243              		.thumb
 244 000c FFF7FEFF 		bl	dbg_check_lock
 245 0010 237A     		ldrb	r3, [r4, #8]	@ zero_extendqisi2
 246 0012 013B     		subs	r3, r3, #1
 247 0014 012B     		cmp	r3, #1
 248 0016 02D9     		bls	.L22
 249 0018 0D48     		ldr	r0, .L24
 250 001a FFF7FEFF 		bl	chDbgPanic
 251              	.L22:
 252 001e 2046     		mov	r0, r4
 253 0020 FFF7FEFF 		bl	sd_lld_stop
 254 0024 0123     		movs	r3, #1
 255 0026 2372     		strb	r3, [r4, #8]
 256 0028 04F13000 		add	r0, r4, #48
 257 002c FFF7FEFF 		bl	chOQResetI
 258 0030 04F10C00 		add	r0, r4, #12
 259 0034 FFF7FEFF 		bl	chIQResetI
 260 0038 FFF7FEFF 		bl	chSchRescheduleS
 261 003c FFF7FEFF 		bl	dbg_check_unlock
 262 0040 0023     		movs	r3, #0
 263              	@ 194 "../../../ChibiOS/os/hal/src/serial.c" 1
 264 0042 83F31188 		msr     BASEPRI, r3
 265              	@ 0 "" 2
 266              		.thumb
 267 0046 10BD     		pop	{r4, pc}
 268              	.L23:
 269 0048 0248     		ldr	r0, .L24+4
 270 004a FFF7FEFF 		bl	chDbgPanic
ARM GAS  /tmp/ccWlK009.s 			page 6


 271 004e DAE7     		b	.L21
 272              	.L25:
 273              		.align	2
 274              	.L24:
 275 0050 28000000 		.word	.LC3
 276 0054 1C000000 		.word	.LC2
 277              		.size	sdStop, .-sdStop
 278 0058 AFF30080 		.section	.text.sdIncomingDataI,"ax",%progbits
 278      AFF30080 
 279              		.align	2
 280              		.p2align 4,,15
 281              		.global	sdIncomingDataI
 282              		.thumb
 283              		.thumb_func
 284              		.type	sdIncomingDataI, %function
 285              	sdIncomingDataI:
 286              		@ args = 0, pretend = 0, frame = 0
 287              		@ frame_needed = 0, uses_anonymous_args = 0
 288 0000 38B5     		push	{r3, r4, r5, lr}
 289 0002 0446     		mov	r4, r0
 290 0004 0D46     		mov	r5, r1
 291 0006 FFF7FEFF 		bl	chDbgCheckClassI
 292 000a D4B1     		cbz	r4, .L30
 293              	.L27:
 294 000c 6369     		ldr	r3, [r4, #20]
 295 000e 3BB1     		cbz	r3, .L31
 296 0010 2946     		mov	r1, r5
 297 0012 04F10C00 		add	r0, r4, #12
 298 0016 FFF7FEFF 		bl	chIQPutI
 299 001a 0028     		cmp	r0, #0
 300 001c 0BDB     		blt	.L32
 301              	.L26:
 302 001e 38BD     		pop	{r3, r4, r5, pc}
 303              	.L31:
 304 0020 201D     		adds	r0, r4, #4
 305 0022 0421     		movs	r1, #4
 306 0024 FFF7FEFF 		bl	chEvtBroadcastFlagsI
 307 0028 2946     		mov	r1, r5
 308 002a 04F10C00 		add	r0, r4, #12
 309 002e FFF7FEFF 		bl	chIQPutI
 310 0032 0028     		cmp	r0, #0
 311 0034 F3DA     		bge	.L26
 312              	.L32:
 313 0036 201D     		adds	r0, r4, #4
 314 0038 8021     		movs	r1, #128
 315 003a BDE83840 		pop	{r3, r4, r5, lr}
 316 003e FFF7FEBF 		b	chEvtBroadcastFlagsI
 317              	.L30:
 318 0042 0248     		ldr	r0, .L33
 319 0044 FFF7FEFF 		bl	chDbgPanic
 320 0048 E0E7     		b	.L27
 321              	.L34:
 322 004a 00BF     		.align	2
 323              	.L33:
 324 004c 38000000 		.word	.LC4
 325              		.size	sdIncomingDataI, .-sdIncomingDataI
 326              		.section	.text.sdRequestDataI,"ax",%progbits
ARM GAS  /tmp/ccWlK009.s 			page 7


 327              		.align	2
 328              		.p2align 4,,15
 329              		.global	sdRequestDataI
 330              		.thumb
 331              		.thumb_func
 332              		.type	sdRequestDataI, %function
 333              	sdRequestDataI:
 334              		@ args = 0, pretend = 0, frame = 0
 335              		@ frame_needed = 0, uses_anonymous_args = 0
 336 0000 38B5     		push	{r3, r4, r5, lr}
 337 0002 0446     		mov	r4, r0
 338 0004 FFF7FEFF 		bl	chDbgCheckClassI
 339 0008 6CB1     		cbz	r4, .L38
 340              	.L36:
 341 000a 04F13000 		add	r0, r4, #48
 342 000e FFF7FEFF 		bl	chOQGetI
 343 0012 051E     		subs	r5, r0, #0
 344 0014 01DB     		blt	.L39
 345 0016 2846     		mov	r0, r5
 346 0018 38BD     		pop	{r3, r4, r5, pc}
 347              	.L39:
 348 001a 201D     		adds	r0, r4, #4
 349 001c 0821     		movs	r1, #8
 350 001e FFF7FEFF 		bl	chEvtBroadcastFlagsI
 351 0022 2846     		mov	r0, r5
 352 0024 38BD     		pop	{r3, r4, r5, pc}
 353              	.L38:
 354 0026 0248     		ldr	r0, .L40
 355 0028 FFF7FEFF 		bl	chDbgPanic
 356 002c EDE7     		b	.L36
 357              	.L41:
 358 002e 00BF     		.align	2
 359              	.L40:
 360 0030 4C000000 		.word	.LC5
 361              		.size	sdRequestDataI, .-sdRequestDataI
 362 0034 AFF30080 		.section	.rodata.str1.4,"aMS",%progbits,1
 362      AFF30080 
 362      AFF30080 
 363              		.align	2
 364              	.LC0:
 365 0000 22736453 		.ascii	"\"sdStart\"()\000"
 365      74617274 
 365      22282900 
 366              	.LC1:
 367 000c 73645374 		.ascii	"sdStart(), #1\000"
 367      61727428 
 367      292C2023 
 367      3100
 368 001a 0000     		.space	2
 369              	.LC2:
 370 001c 22736453 		.ascii	"\"sdStop\"()\000"
 370      746F7022 
 370      282900
 371 0027 00       		.space	1
 372              	.LC3:
 373 0028 73645374 		.ascii	"sdStop(), #1\000"
 373      6F702829 
ARM GAS  /tmp/ccWlK009.s 			page 8


 373      2C202331 
 373      00
 374 0035 000000   		.space	3
 375              	.LC4:
 376 0038 22736449 		.ascii	"\"sdIncomingDataI\"()\000"
 376      6E636F6D 
 376      696E6744 
 376      61746149 
 376      22282900 
 377              	.LC5:
 378 004c 22736452 		.ascii	"\"sdRequestDataI\"()\000"
 378      65717565 
 378      73744461 
 378      74614922 
 378      282900
 379 005f 00       		.section	.rodata.vmt,"a",%progbits
 380              		.align	2
 381              		.set	.LANCHOR0,. + 0
 382              		.type	vmt, %object
 383              		.size	vmt, 32
 384              	vmt:
 385 0000 00000000 		.word	write
 386 0004 00000000 		.word	read
 387 0008 00000000 		.word	put
 388 000c 00000000 		.word	get
 389 0010 00000000 		.word	putt
 390 0014 00000000 		.word	gett
 391 0018 00000000 		.word	writet
 392 001c 00000000 		.word	readt
 393              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.3 20140228 (release) [ARM/embedded-4_8-br
ARM GAS  /tmp/ccWlK009.s 			page 9


DEFINED SYMBOLS
                            *ABS*:00000000 serial.c
     /tmp/ccWlK009.s:16     .text.readt:00000000 $t
     /tmp/ccWlK009.s:21     .text.readt:00000000 readt
     /tmp/ccWlK009.s:29     .text.read:00000000 $t
     /tmp/ccWlK009.s:34     .text.read:00000000 read
     /tmp/ccWlK009.s:43     .text.writet:00000000 $t
     /tmp/ccWlK009.s:48     .text.writet:00000000 writet
     /tmp/ccWlK009.s:56     .text.write:00000000 $t
     /tmp/ccWlK009.s:61     .text.write:00000000 write
     /tmp/ccWlK009.s:70     .text.gett:00000000 $t
     /tmp/ccWlK009.s:75     .text.gett:00000000 gett
     /tmp/ccWlK009.s:83     .text.get:00000000 $t
     /tmp/ccWlK009.s:88     .text.get:00000000 get
     /tmp/ccWlK009.s:97     .text.putt:00000000 $t
     /tmp/ccWlK009.s:102    .text.putt:00000000 putt
     /tmp/ccWlK009.s:110    .text.put:00000000 $t
     /tmp/ccWlK009.s:115    .text.put:00000000 put
     /tmp/ccWlK009.s:124    .text.sdInit:00000000 $t
     /tmp/ccWlK009.s:130    .text.sdInit:00000000 sdInit
     /tmp/ccWlK009.s:137    .text.sdObjectInit:00000000 $t
     /tmp/ccWlK009.s:143    .text.sdObjectInit:00000000 sdObjectInit
     /tmp/ccWlK009.s:173    .text.sdObjectInit:0000003c $d
     /tmp/ccWlK009.s:176    .text.sdStart:00000000 $t
     /tmp/ccWlK009.s:182    .text.sdStart:00000000 sdStart
     /tmp/ccWlK009.s:222    .text.sdStart:00000040 $d
     /tmp/ccWlK009.s:226    .text.sdStop:00000000 $t
     /tmp/ccWlK009.s:232    .text.sdStop:00000000 sdStop
     /tmp/ccWlK009.s:275    .text.sdStop:00000050 $d
     /tmp/ccWlK009.s:279    .text.sdIncomingDataI:00000000 $t
     /tmp/ccWlK009.s:285    .text.sdIncomingDataI:00000000 sdIncomingDataI
     /tmp/ccWlK009.s:324    .text.sdIncomingDataI:0000004c $d
     /tmp/ccWlK009.s:327    .text.sdRequestDataI:00000000 $t
     /tmp/ccWlK009.s:333    .text.sdRequestDataI:00000000 sdRequestDataI
     /tmp/ccWlK009.s:360    .text.sdRequestDataI:00000030 $d
     /tmp/ccWlK009.s:363    .rodata.str1.4:00000000 $d
     /tmp/ccWlK009.s:380    .rodata.vmt:00000000 $d
     /tmp/ccWlK009.s:384    .rodata.vmt:00000000 vmt
     /tmp/ccWlK009.s:225    .text.sdStart:00000048 $t
     /tmp/ccWlK009.s:278    .text.sdStop:00000058 $t
     /tmp/ccWlK009.s:362    .text.sdRequestDataI:00000034 $t

UNDEFINED SYMBOLS
chIQReadTimeout
chOQWriteTimeout
chIQGetTimeout
chOQPutTimeout
sd_lld_init
chIQInit
chOQInit
dbg_check_lock
chDbgPanic
sd_lld_start
dbg_check_unlock
sd_lld_stop
chOQResetI
chIQResetI
ARM GAS  /tmp/ccWlK009.s 			page 10


chSchRescheduleS
chDbgCheckClassI
chIQPutI
chEvtBroadcastFlagsI
chOQGetI
